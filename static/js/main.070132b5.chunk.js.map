{"version":3,"sources":["reportWebVitals.js","Components/Dashboard/Table.js","Components/Dashboard/Dashboard.js","Components/Register/Register.js","Components/Notfound/NotFound.js","Components/Dashboard/Edit.js","Components/Routes/Route.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Table","props","useState","user","setUsers","success","setSuccess","fail","setFail","inputElement","useRef","searchTerm","setSearchTerm","searchResults","setSearchResults","onDelete","id","a","console","log","window","confirm","axios","delete","res","useEffect","get","response","data","searchHandler","newItemsList","filter","items","Object","values","join","toLowerCase","includes","style","height","width","borderRadius","border","boxShadow","marginLeft","ref","type","placeholder","value","onChange","current","Alert","show","dismissable","variant","className","scope","length","map","val","index","firstname","lastname","dob","percentage","src","profile_picture","alt","to","_id","class","onClick","Dashboard","useNavigate","href","Row","backgroundColor","color","textAlign","Register","useForm","errors","register","handleSubmit","formState","navigate","setUser","image","setImages","handleChange","e","preventDefault","target","name","onSubmit","formData","FormData","append","Axios","post","styles","container","noValidate","autoComplete","htmlFor","message","email","accept","defaultValue","files","NotFound","Edit","useParams","newuser","setNewUser","newData","setMessage","put","role","Routes","path","element","exact","ReactDOM","render","StrictMode","Route","document","getElementById"],"mappings":"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","file":"static/js/main.070132b5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect ,useRef } from \"react\";\nimport { Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Table = (props) => {\n  const [user, setUsers] = useState([]);\n  const [success, setSuccess] = useState(false);\n  const [fail, setFail] = useState(false);\n  const inputElement = useRef(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [item, setItem] = useState({});\n  const onDelete = async (id) => {\n    console.log(id);\n    const toLogout = window.confirm(\"Are you sure to delete ?\");\n    if(toLogout){\n      await axios.delete(`https://student-management01.herokuapp.com/student/delete/${id}`).then((res) => {\n        if (res) {\n          console.log(res);\n          setSuccess(true);\n        } else {\n          setFail(true);\n        }\n      })\n    }\n    else{\n      setFail(true);\n    }\n\n  };\n\n\n\n  useEffect(async () => {\n    await axios.get(`https://student-management01.herokuapp.com/student/getAll`)\n      .then((res) => {\n        const response = res.data.res;\n        setUsers(response);\n      })\n\n  }, [user]);\n\n\n const getSearchTerm = () => {\n    searchHandler(inputElement.current.value);\n  };\n  \n  const searchHandler = (searchTerm) => {\n    setSearchTerm(searchTerm);\n    if (searchTerm !== \"\") {\n      const newItemsList = user.filter((items) => {\n        // console.log(Object.values(item));\n        return Object.values(items)\n          .join(\"\")\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newItemsList);\n    } else {\n      setSearchResults(user);\n    }\n  };\n\n  let editButton;\n\n  return (\n    <>\n      <input\n            style={{\n                        height: \"50px\",\n                        width: \"400px\",\n                        borderRadius: \"0%,30%,0%,30%\",\n                        border: \"6px solid lightgrey\",\n                        boxShadow: \"0px 2px 6px grey\",\n                        marginLeft:\"130px\",\n                      }}\n          \n            ref={inputElement}\n            type=\"text\"\n            placeholder=\"Search by Name,Percentage\"\n            value={searchTerm}\n            onChange={getSearchTerm}\n          />\n          \n      <div>\n        <Alert show={success} dismissable variant=\"success\">\n          Deleted SuccessFully\n        </Alert>\n        <Alert show={fail} dismissable variant=\"danger\">\n          somethiing went wrong\n        </Alert>\n      </div>\n      <table className=\"table\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th>S.No.</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Last Name</th>\n            <th scope=\"col\">Date Of Birth</th>\n            <th scope=\"col\">Percentage</th>\n            <th scope=\"col\">Profile Picture</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {searchResults.length > 1 || user.length > 1\n                ? (searchTerm.length < 1 ? user : searchResults)?.map((val, index) => (\n            <tr key={index}>\n              <th className=\"snumber\" scope=\"row\">\n                {val.id}\n              </th>\n              <td scope=\"col\">{val.firstname}</td>\n              <td scope=\"col\">{val.lastname}</td>\n              <td scope=\"col\">{val.dob}</td>\n              <td scope=\"col\">{val.percentage}</td>\n              <td scope=\"col\">\n              <img\n                      src={\"http://\" + val.profile_picture}\n                      alt=\"profilePic\"\n                      style={{\n                        height: \"100px\",\n                        width: \"100px\",\n                        borderRadius: \"50%\",\n                        border: \"6px solid lightgrey\",\n                        boxShadow: \"0px 2px 6px grey\",\n                      }}\n                    />\n              </td>\n              <td>\n                <Link to={`/edit/${val._id}`}>\n                  <button\n                    className=\"edit_button\"\n                    // onClick={props.handleShow}\n                    id={val.id}\n                  >\n                    <i class=\"far fa-edit\"></i>\n                  </button>\n                </Link>\n                <button\n                  className=\"delete_button\"\n                  onClick={() => onDelete(val._id)}\n                >\n                  <i class=\"far fa-trash-alt\"></i>\n                </button>\n              </td>\n            </tr>\n                 )) : \"No orders Found\"}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState ,useRef } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport \"./Table.css\";\nimport Table from \"./Table\";\nimport { Row } from \"react-bootstrap\";\n\nconst Dashboard = () => {\n  const [dashboard, setDashboard] = useState(null);\n  const history = useNavigate();\n  const [data, setData] = useState();\n  const inputElement = useRef(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [item, setItem] = useState({});\n\n  const createUser = {\n    backgroundColor: \"none\",\n    boxShadow: \"2px 2px 7px grey\",\n    border: \"none\",\n    width: \"150px\",\n    color: \"darkgreen\",\n    borderRadius: \"20px\",\n    height: \"40px\"\n  };\n\n  const getSearchTerm = () => {\n    searchHandler(inputElement.current.value);\n  };\n  \n  const searchHandler = (searchTerm) => {\n    setSearchTerm(searchTerm);\n    if (searchTerm !== \"\") {\n      const newItemsList = item.filter((items) => {\n        // console.log(Object.values(item));\n        return Object.values(items)\n          .join(\"\")\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newItemsList);\n    } else {\n      setSearchResults(item);\n    }\n  };\n  return (\n    <>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <div className=\"col-10\">\n        <a className=\"navbar-brand font\" href=\"/\">\n            Student Management System\n        </a>\n      </div>\n      <div className=\"col-2\">\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarText\"\n          aria-controls=\"navbarText\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <Row>\n            \n              <button style={createUser}><Link className=\"nav-link active\" aria-current=\"page\" to='/register'>+ Create</Link></button>\n           \n        </Row>\n        </div>\n      </nav>\n\n      <div className=\"table_container\">\n        \n        <h5\n        style={{\n                textAlign:\"center\"\n                      }}\n        >User Information</h5>\n        \n\n        <Table\n          data={data}\n          // show={show}\n          // handleClose={handleClose}\n          // handleShow={handleShow}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState } from \"react\";\nimport styles from \"./Register.css\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useNavigate} from \"react-router-dom\";\nimport { Row, Alert } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport ImageUploading from 'react-images-uploading';\nimport Dashboard from '../Dashboard/Dashboard'\nconst Register = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const navigate = useNavigate();\n  const [message, setMessage] = useState();\n\n  const [user, setUser] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    dob: \"\",\n    percentage: \"\",\n  });\n  \n  const [image, setImages] = useState({\n    profile_picture: \"\",\n  });\n  const [success, setSuccess] = useState(false);\n  const [fail, setFail] = useState(false);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setUser({ ...user, [e.target.name]: e.target.value });\n    console.log(user);\n  };\n\n  const onChange = (e) => {\n    setImages({ profile_picture: e.target.files[0] });\n  };\n   const formData = {\n    firstname: user.firstname,\n    lastname: user.lastname,\n    dob: user.dob,\n    percentage: user.percentage,\n    profile_picture: image.profile_picture,\n  };\n  const onSubmit = async (e) => {\n      const formData = new FormData();\n      formData.append(\"firstname\",user.firstname);\n      formData.append(\"lastname\", user.lastname);\n      formData.append(\"dob\", user.dob);\n      formData.append(\"percentage\", user.percentage);\n      formData.append(\"profile_picture\", image.profile_picture);\n    e.preventDefault();\n    await Axios.post(\n      \"https://student-management01.herokuapp.com/student/create\",\n      formData\n      \n    ).then((res) => {\n      if (res) {\n        setSuccess(true);\n        navigate('/')\n        \n      } else {\n        console.log(res);\n        setFail(true);\n      }\n    });\n\n    \n  };\n  return (\n    <div\n      className={`${styles.container} container-fluid d-flex align-items-center justify-content-center`}\n    >\n      <div className=\"registrationFormContainer\">\n        <Alert show={success} variant=\"success\">\n          Registerd SuccessFully\n        </Alert>\n        <Alert show={fail} variant=\"danger\">\n          Registeration Failed\n        </Alert>\n       \n\n        <fieldset className=\" p-3\">\n          <legend className=\"registrationFormLegend text-center\">\n            Registration Form\n          </legend>\n          <form onSubmit={onSubmit} noValidate autoComplete=\"off\">\n            <div className=\"form-group\">\n              <label htmlFor=\"inputForName\">Student Name</label>\n              <span className=\"mandatory\">*</span>\n              <input\n                name=\"firstname\"\n                type=\"text\"\n                className=\"form-control\"\n                aria-describedby=\"Enter your name\"\n                placeholder=\"Enter your name\"\n                value={user.firstname}\n                onChange={handleChange}                                                                              \n              />\n              {errors.name && (\n                <span className=\"errorMessage mandatory\">\n                  {errors.firstname.message}\n                </span>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"inputForName\">Student Lastname</label>\n              <span className=\"mandatory\">*</span>\n              <input\n                name=\"lastname\"\n                type=\"text\"\n                className=\"form-control\"\n                aria-describedby=\"Enter your Lastname\"\n                placeholder=\"Enter your Lastname\"\n                value={user.lastname}\n                onChange={handleChange}\n              />\n              {errors.lastname && (\n                <span className=\"errorMessage mandatory\">\n                  {errors.lastname.message}\n                </span>\n              )}\n            </div>\n            \n            <div className=\"form-group \">\n              <label htmlFor=\"inputForEmail\">Enter Date of Birth</label>\n              <span className=\"mandatory\">*</span>\n              <input\n                id=\"inputFordob\"\n                name=\"dob\"\n                type=\"date\"\n                className=\"form-control\"\n                aria-describedby=\"Enter date of birth\"\n                placeholder=\"Enter date of birth\"\n                value={user.dob}\n                onChange={handleChange}\n              />\n              {errors.dob && (\n                <span className=\"errorMessage mandatory\">\n                  {errors.dob.message}\n                </span>\n              )}\n            </div>\n\n            <div className=\"form-group \">\n              <label htmlFor=\"inputForEmail\">Enter Percentage</label>\n              <span className=\"mandatory\">*</span>\n              <input\n                id=\"inputForPercentage\"\n                name=\"percentage\"\n                type=\"text\"\n                className=\"form-control\"\n                aria-describedby=\"Enter Percentage\"\n                placeholder=\"Enter Percentage \"\n                value={user.percentage}\n                onChange={handleChange}\n                \n              />\n              {errors.percentage && (\n                <span className=\"errorMessage mandatory\">\n                  {errors.email.message}\n                </span>\n              )}\n            </div>\n            \n\n            <div className=\"form-group\">\n              <label htmlFor=\"inputForPassword\">Uplode Profile Image</label>\n              <span className=\"mandatory\">*</span>\n              <input\n                type=\"file\"\n                name=\"profile_picture\"\n                className=\"form-control\"\n                placeholder=\"Enter Profile Picture\"\n                accept=\"image/*\"\n                defaultValue={image.profile_picture.name}\n                onChange={onChange}\n\n              />\n              {errors.profile_picture && (\n                <span className=\"errorMessage mandatory\">\n                  {errors.profile_picture.message}\n                </span>\n              )}\n            </div>\n\n            <div className=\"d-flex pt-4 align-items-center justify-content-center\">\n              <button type=\"submit\" className=\"register_btn\">\n                Submit\n              </button>\n              <button className=\"login-btn\">\n                <Link to=\"/\">Back</Link>\n              </button>\n            </div>\n          </form>\n        </fieldset>\n      </div>\n    </div>\n  );\n};\nexport default Register;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <div>404 Not FOund</div>;\n};\n\nexport default NotFound;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"../Register/Register.css\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useParams,useNavigate } from \"react-router-dom\";\nimport { Row , Alert} from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst Edit = () => {\n  const { id } = useParams([]);\n  const [user, setUsers] = useState(\"\");\n  const [newuser, setNewUser] = useState(\"\");\n  const [status, setStatus] = useState(false);\n  \n  const navigate = useNavigate();\n  \n  const [success, setSuccess] = useState(false);\n  const [fail, setFail] = useState(false);\n  const handleChange = (e) => {\n    e.preventDefault();\n    setNewUser({ [e.target.name]: e.target.value });\n  };\n  const newData = {\n    firstname:newuser.firstname,\n    lastname:newuser.lastname,\n    dob: newuser.dob,\n    percentage: newuser.percentage,\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const [message, setMessage] = useState();\n  const onSubmit = async(data, e) => {\n\n    console.log(newData);\n     await axios.put(`https://student-management01.herokuapp.com/student/edit/${id}`, newData\n    ).then((response) => {\n      if (response) {\n        setSuccess(true);\n        navigate('/')\n      }\n      else{\n        setFail(true);\n      }\n     \n     \n    });\n  };\n\n  useEffect(async () => {\n    await axios.get(`https://student-management01.herokuapp.com/student/get/${id}`)\n      .then((res) => {\n        const response = res.data.res;\n        console.log(response);\n        setUsers(response);\n      })\n\n  }, [user]);\n  return (\n    <div\n      className={`${styles.container} container-fluid d-flex align-items-center justify-content-center`}\n    >\n    <Alert show={success} variant=\"success\">\n          Registerd SuccessFully\n        </Alert>\n        <Alert show={fail} variant=\"danger\">\n          Registeration Failed\n        </Alert>\n       \n      <div className=\"registrationFormContainer\">\n        {message && (\n          <div\n            className={`alert fade show d-flex ${message.type}`}\n            role=\"alert\"\n          >\n            {message.data}\n            <span\n              aria-hidden=\"true\"\n              className=\"ml-auto cursor-pointer\"\n              onClick={() => setMessage(null)}\n            >\n              &times;\n            </span>\n          </div>\n        )}\n        <fieldset className=\" p-3\">\n          <legend className=\"registrationFormLegend text-center\">\n            Edit User Details\n          </legend>\n          {/* {user.map((val, index) => ( */}\n          <form onSubmit={handleSubmit(onSubmit)} noValidate autoComplete=\"off\" >\n          \n            <div className=\"form-group\">\n              <label htmlFor=\"inputForName\">Student Name</label>\n              <span className=\"mandatory\">*</span>\n              <input\n                name=\"firstname\"\n                type=\"text\"\n                className=\"form-control\"\n                aria-describedby=\"Enter your name\"\n                placeholder=\"Enter your name\"\n                defaultValue={user.firstname}\n                onChange={handleChange}                                                                              \n              />\n              \n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"inputForName\">Student Lastname</label>\n              <span className=\"mandatory\">*</span>\n              <input\n                name=\"lastname\"\n                type=\"text\"\n                className=\"form-control\"\n                aria-describedby=\"Enter your Lastname\"\n                placeholder=\"Enter your Lastname\"\n                defaultValue={user.lastname}\n                onChange={handleChange}\n              />\n              {errors.lastname && (\n                <span className=\"errorMessage mandatory\">\n                  {errors.lastname.message}\n                </span>\n              )}\n            </div>\n            \n            <div className=\"form-group \">\n              <label htmlFor=\"inputForEmail\">Enter Date of Birth</label>\n              <span className=\"mandatory\">*</span>\n              <input\n                id=\"inputFordob\"\n                name=\"dob\"\n                type=\"date\"\n                className=\"form-control\"\n                aria-describedby=\"Enter date of birth\"\n                placeholder=\"Enter date of birth\"\n                defaultValue={user.dob}\n                onChange={handleChange}\n              />\n              {errors.dob && (\n                <span className=\"errorMessage mandatory\">\n                  {errors.dob.message}\n                </span>\n              )}\n            </div>\n\n            <div className=\"form-group \">\n              <label htmlFor=\"inputForEmail\">Enter Percentage</label>\n              <span className=\"mandatory\">*</span>\n              <input\n                id=\"inputForPercentage\"\n                name=\"percentage\"\n                type=\"text\"\n                className=\"form-control\"\n                aria-describedby=\"Enter Percentage\"\n                placeholder=\"Enter Percentage \"\n                defaultValue={user.percentage}\n                onChange={handleChange}\n                \n              />\n              {errors.percentage && (\n                <span className=\"errorMessage mandatory\">\n                  {errors.email.message}\n                </span>\n              )}\n            </div>\n            \n\n            <div className=\"form-group\">\n              <label htmlFor=\"inputForPassword\">Uplode Profile Image</label>\n              <span className=\"mandatory\">*</span>\n              <img\n                      src={\"http://\" + user.profile_picture}\n                      alt=\"profilePic\"\n                      style={{\n                        height: \"100px\",\n                        width: \"100px\",\n                        borderRadius: \"50%\",\n                        border: \"6px solid lightgrey\",\n                        boxShadow: \"0px 2px 6px grey\",\n                      }}\n                    />\n              {errors.profile_picture && (\n                <span className=\"errorMessage mandatory\">\n                  {errors.profile_picture.message}\n                </span>\n              )}\n            </div>\n\n            <div className=\"d-flex pt-4 align-items-center justify-content-center\">\n              <button type=\"submit\" className=\"register_btn\">\n                Submit\n              </button>\n              <button className=\"login-btn\">\n                <Link to=\"/\">Back</Link>\n              </button>\n            </div>\n           \n          </form>\n          {/* ))} */}\n        </fieldset>\n      </div>\n    </div>\n  );\n};\n\nexport default Edit;\n","import {\n  Route,\n  BrowserRouter as Router,\n  Link,\n  Routes as R\n} from \"react-router-dom\";\nimport Register from \"../Register/Register\";\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport NotFound from \"../Notfound/NotFound\";\nimport Edit from \"../Dashboard/Edit\";\nconst Routes = (props) => {\n  return (\n    <Router {...props}>\n  \n      <R>\n        \n        <Route path=\"/register\" element={<Register />} />\n      \n        <Route exact path=\"/\" element={<Dashboard />} />\n         <Route path={`/edit/:id`}   element={<Edit />}/> \n\n        <Route path=\"*\" element={<NotFound />} />\n      </R>\n    </Router>\n  );\n};\nexport default Routes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Routes from \"./Components/Routes/Route\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}